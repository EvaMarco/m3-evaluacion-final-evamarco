{"version":3,"sources":["components/Filters/index.js","components/CharacterCard/index.js","components/CharacterList/index.js","components/Home/index.js","components/CharacterDetail/index.js","components/App/index.js","services/getcharacters.js","index.js"],"names":["Filters","props","getUserInput","query","getSelectValue","planets","planet","className","htmlFor","type","id","placeholder","onChange","value","name","map","item","index","key","CharacterCard","src","image","alt","species","CharacterList","api","filter","toUpperCase","includes","origin","to","Home","Fragment","Character","routerProps","charId","parseInt","match","params","selectedChar","status","episode","length","App","state","bind","fetch","then","response","json","data","results","setPlanets","Set","setState","this","fetchCharacters","event","inputValue","currentTarget","selectValue","exact","path","render","CharacterDetail","React","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ffcaedbe.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './filters.scss';\n\nconst Filters = props => {\n  const {getUserInput, query, getSelectValue, planets, planet} = props;\n  return (\n    <div className = \"filters__divs\">\n      <label htmlFor = \"name\" className = \"input__label\"></label>\n      <input \n        className = \"text__input\"\n        type = \"text\" \n        id = \"name\" \n        placeholder =\"Busca por nombre\" \n        onChange = {getUserInput}\n        value = {query}\n      />\n      <label htmlFor = \"houses\" className = \"input__label\"></label>\n      <select className = \"select__input\"name = \"houses\" id = \"houses\" onChange={getSelectValue} value={planet}>\n        <option value = 'null' >All planets</option>\n        {planets.map((item, index) =>  \n          <option value = {item} key = {index} > {item} </option>) \n        }\n      </select>\n    </div>\n  )\n}\n\nFilters.propTypes = {\n  query : PropTypes.string.isRequired,\n  getUserInput : PropTypes.func.isRequired,\n  getSelectValue: PropTypes.func.isRequired,\n  planets: PropTypes.arrayOf(PropTypes.string).isRequired,\n  planet: PropTypes.string.isRequired\n}\nexport default Filters;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './character_card.scss';\n\nconst CharacterCard = props => {\n  const {item} = props;\n  return(\n    <div className=\"card\">\n      <div className=\"char__image\">\n        <img src={item.image} alt={item.name}/>\n      </div>\n      <div className=\"char__info\">\n        <h2 className=\"char__name\">{item.name}</h2>\n        <p className=\"char__species\">{item.species}</p>\n      </div>\n    </div>\n  );\n}\nCharacterCard.propTypes = {\n  item: PropTypes.object.isRequired,\n}\nexport default CharacterCard;","import React from 'react';\nimport CharacterCard from '../CharacterCard';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport './character_list.scss';\n\nconst CharacterList = props => {\n  const {api, query, planet} = props;\n  return(\n        api\n          .filter(item => {return item.name.toUpperCase().includes(query.toUpperCase())})\n          .filter(item => {if(planet=== 'null'){return(item)}else{return item.origin.name.toUpperCase().includes(planet.toUpperCase())}})\n          .map((item)=>{\n            return(\n              <li key={item.id}>\n                <Link to = {`/character/${item.id}`}>\n                  <CharacterCard item = {item}/>  \n                </Link>\n              </li>\n            )\n          })\n        \n    );\n  }\n\n  CharacterList.propTypes = {\n    api: PropTypes.arrayOf(PropTypes.object).isRequired,\n    query: PropTypes.string,\n    planet: PropTypes.string.isRequired\n  }\nexport default CharacterList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Filters from '../Filters';\nimport CharacterList from '../CharacterList';\nimport './home.scss';\n\nconst Home = props => {\n  const {api, query, getUserInput, getSelectValue, planets, planet} = props;\nreturn(\n  <React.Fragment>\n    <div className=\"filters__container\">\n      <Filters \n        getUserInput = {getUserInput} \n        query = {query}\n        getSelectValue = {getSelectValue}\n        planets = {planets}\n        planet = {planet}\n      />\n    </div>\n    <ul className=\"char__list\">\n      <CharacterList \n        api = {api} \n        query = {query}\n        planet = {planet}\n      />\n    </ul>\n  </React.Fragment>\n)\n}\n\nHome.propTypes = {\n  api: PropTypes.arrayOf(PropTypes.object).isRequired, \n  query: PropTypes.string.isRequired, \n  getUserInput: PropTypes.func.isRequired,\n  getSelectValue: PropTypes.func.isRequired,\n  planets: PropTypes.arrayOf(PropTypes.string).isRequired,\n  planet: PropTypes.string.isRequired\n}\n\nexport default Home;","import React, {Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport './character_detail.scss';\n\nconst Character = props => {\n  const {routerProps, api} = props;\n  const charId = parseInt(routerProps.match.params.charId); \n  const selectedChar = api.filter(item => {return(item.id === charId)});\n\n  if(selectedChar[0]){  \n    if(selectedChar[0].status === 'Alive'){\n      return(\n        <Fragment>\n        <Link to = '/'><p className=\"link__anchor\"></p></Link>\n        <div className=\"detail__wrapper\">       \n          <div className=\"detail__img\">\n            <img className =\"img\" src={selectedChar[0].image} alt={selectedChar[0].name}/>\n          </div>\n          <div className=\"detail__info\">\n            <h2 className=\"char__name-detail\">{selectedChar[0].name}</h2>\n            <h3 className=\"char__status__title\">Status</h3>\n            <p className=\"char__status\">\n              <i className=\"fas fa-heartbeat\"></i>\n            </p>\n            <h3 className=\"char__origin-title\">Origen</h3>\n            <p className=\"char__origin\">{selectedChar[0].origin.name}</p>\n            <h3 className=\"char__episodes-title\">Episodios</h3>\n            <p className=\"char__episodes\">{selectedChar[0].episode.length}</p>\n          </div>\n        </div>\n      </Fragment>\n      )\n    }\n    else if(selectedChar[0].status === 'unknown'){\n      return(\n        <Fragment>\n        <Link to = '/'><p className=\"link__anchor\"></p></Link>\n        <div className=\"detail__wrapper\">       \n          <div className=\"detail__img\">\n            <img className =\"img\" src={selectedChar[0].image} alt={selectedChar[0].name}/>\n          </div>\n          <div className=\"detail__info\">\n            <h2 className=\"char__name-detail\">{selectedChar[0].name}</h2>\n            <h3 className=\"char__status__title\">Status</h3>\n            <p className=\"char__status\">\n              <i className=\"fas fa-question-circle\"></i>\n            </p>\n            <h3 className=\"char__origin-title\">Origen</h3>\n            <p className=\"char__origin\">{selectedChar[0].origin.name}</p>\n            <h3 className=\"char__episodes-title\">Episodios</h3>\n            <p className=\"char__episodes\">{selectedChar[0].episode.length}</p>\n          </div>\n        </div>\n      </Fragment>\n      )\n      \n    }\n    else{\n      return(\n        <Fragment>\n        <Link to = '/'><p className=\"link__anchor\"></p></Link>\n        <div className=\"detail__wrapper\">       \n          <div className=\"detail__img\">\n            <img className =\"img\" src={selectedChar[0].image} alt={selectedChar[0].name}/>\n          </div>\n          <div className=\"detail__info\">\n            <h2 className=\"char__name-detail\">{selectedChar[0].name}</h2>\n            <h3 className=\"char__status__title\">Status</h3>\n            <p className=\"char__status\">\n              <i className=\"fas fa-skull-crossbones\"></i>\n            </p>\n            <h3 className=\"char__origin-title\">Origen</h3>\n            <p className=\"char__origin\">{selectedChar[0].origin.name}</p>\n            <h3 className=\"char__episodes-title\">Episodios</h3>\n            <p className=\"char__episodes\">{selectedChar[0].episode.length}</p>\n          </div>\n        </div>\n      </Fragment>\n        )\n\n    }\n\n  }\n  else{\n    return(\n      <Fragment>\n        <Link to=\"/\" className=\"app__back\">\n          Volver al listado\n        </Link>\n        <p className = \"noData\">No tenemos datos de ese personaje.</p>\n      </Fragment>\n    )\n  }\n}\n\nCharacter.propTypes = {\n  api: PropTypes.arrayOf(PropTypes.object).isRequired, \n  routerProps: PropTypes.object.isRequired\n}\n\nexport default Character;\n","import React from 'react';\nimport {getCharacters} from '../../services/getcharacters';\nimport Home from '../Home';\nimport CharacterDetail from '../CharacterDetail';\nimport {Route, Switch} from 'react-router-dom';\nimport './app.scss';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      api:[],\n      query: '',\n      planets:[],\n      planet: 'null'\n    }\n    this.getUserInput= this.getUserInput.bind(this); \n    this.getSelectValue= this.getSelectValue.bind(this); \n  }\n\n  fetchCharacters(){\n    getCharacters()\n      .then(data =>{\n        const planets = data.results.map(item =>item.origin.name);\n        let setPlanets = [...new Set(planets)]\n        this.setState({api:data.results, planets:setPlanets})\n        } \n      )\n  }\n\n  componentDidMount(){\n    this.fetchCharacters()\n  }\n  getUserInput(event){\n    const inputValue = event.currentTarget.value;\n    this.setState({query: inputValue});\n  }\n  getSelectValue(event){\n    const selectValue = event.currentTarget.value;\n    this.setState({planet: selectValue})\n  }\n  render() {\n    return (\n      <div className=\"app\">\n        <header className=\"app__header\">\n          <h1 className=\"page__title\">Rick And Morty Characters</h1>\n        </header>\n        <Switch>\n            <Route \n              exact path = '/' \n              render = {\n                () => {\n                  return (\n                    <Home \n                      api = {this.state.api} \n                      query = {this.state.query}\n                      getUserInput = {this.getUserInput} \n                      getSelectValue = {this.getSelectValue}\n                      planet = {this.state.planet}\n                      planets = {this.state.planets}\n                    />\n                  )\n                }\n              }\n            />\n            <Route \n              path = '/character/:charId'\n              render = {\n                (routerProps) => {\n                  return (\n                    <CharacterDetail \n                      api = {this.state.api} \n                      routerProps = {routerProps}\n                    />\n                  )\n                }\n              }\n            />\n          </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const ENDPOINT = 'https://rickandmortyapi.com/api/character/';\nconst NEWENDPOINT = 'https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json'\n\nconst getCharacters = () => {\n  return(\n    fetch(NEWENDPOINT)\n    .then(response => response.json())\n  )\n}\n\nexport  {getCharacters}; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport {HashRouter} from 'react-router-dom';\nimport './scss/main.scss';\n\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n"],"sourceRoot":""}